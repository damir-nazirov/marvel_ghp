{"version":3,"sources":["components/comicsList/ComicsList.js","components/pages/ComicsPage.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["setContent","process","Component","newItemLoading","Spinner","ErrorMessage","Error","ComicsList","useMarvelService","clearError","getAllComicses","setProcess","useState","comicsList","setComicsList","setNewItemLoading","offset","setOffset","comicsEnded","setComicsEnded","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","className","arr","items","map","item","i","imgStyle","thumbnail","to","id","style","src","alt","title","price","renderItems","disabled","onClick","ComicsPage","Helmet","name","content","AppBanner","_toConsumableArray","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError"],"mappings":"wNASMA,EAAa,SAACC,EAASC,EAAWC,GACpC,OAAQF,GACJ,IAAK,UACD,OAAO,cAACG,EAAA,EAAD,IACX,IAAK,UACD,OAAOD,EAAiB,cAACD,EAAD,IAAe,cAACE,EAAA,EAAD,IAC3C,IAAK,YACD,OAAO,cAACF,EAAD,IACX,IAAK,QACD,OAAO,cAACG,EAAA,EAAD,IACX,QACI,MAAM,IAAIC,MAAM,8BA2FbC,EAvFI,WAEf,MAA0DC,cAAnDC,EAAP,EAAOA,WAAYC,EAAnB,EAAmBA,eAAgBT,EAAnC,EAAmCA,QAASU,EAA5C,EAA4CA,WAC5C,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA4CF,oBAAS,GAArD,mBAAOT,EAAP,KAAuBY,EAAvB,KACA,EAA4BH,mBAAS,KAArC,mBAAOI,EAAP,KAAeC,EAAf,KACA,EAAsCL,oBAAS,GAA/C,mBAAOM,EAAP,KAAoBC,EAApB,KAGDC,qBAAU,WACLC,EAAUL,GAAQ,KAEpB,IAEH,IAAMK,EAAY,SAACL,EAAQM,GACtBb,IACSM,GAATO,GACAZ,EAAeM,GACVO,KAAKC,GACLD,MAAK,kBAAMZ,EAAW,iBAIzBa,EAAqB,SAACC,GACxB,IAAIC,GAAQ,EACRD,EAAcE,OAAS,IACvBD,GAAQ,GAGZZ,GAAc,SAACD,GAAD,4BAAoBA,GAApB,YAAmCY,OACjDV,GAAkB,GAClBE,GAAU,SAACD,GAAD,OAAYA,EAAS,KAC/BG,EAAeO,IAqCf,OACI,sBAAKE,UAAU,eAAf,UACK5B,EAAWC,GAAS,kBAlCjC,SAAuB4B,GACnB,IAAMC,EAASD,EAAIE,KAAI,SAACC,EAAMC,GAC1B,IAAIC,EAAW,CAAC,UAAc,SAK9B,MAJuB,wEAAnBF,EAAKG,YACLD,EAAW,CAAC,UAAc,UAK1B,oBAAIN,UAAU,eAAd,SAGA,eAAC,IAAD,CAAMQ,GAAE,kBAAaJ,EAAKK,IAA1B,UACI,qBAAKC,MAAOJ,EAAUK,IAAKP,EAAKG,UAAWK,IAAKR,EAAKS,MAAOb,UAAU,qBACtE,qBAAKA,UAAU,oBAAf,SAAoCI,EAAKS,QACzC,qBAAKb,UAAU,qBAAf,SAAqCI,EAAKU,YALzCT,MAYb,OACI,oBAAIL,UAAU,eAAd,SACKE,IAU0Ba,CAAY9B,KAAaV,GACpD,wBACIyB,UAAU,mCACVgB,SAAUzC,EACVmC,MAAO,CAAC,QAAWpB,EAAc,OAAS,SAC1C2B,QAAS,kBAAMxB,EAAUL,IAJ7B,SAKI,qBAAKY,UAAU,QAAf,SAAyBzB,EAA+B,aAAd,oBC/E/C2C,UAjBI,WACd,OACI,qCACA,eAACC,EAAA,EAAD,WACG,sBACIC,KAAK,cACLC,QAAQ,iCAEZ,mDAGF,cAACC,EAAA,EAAD,IACA,cAAC,EAAD,S,wFCbK,SAASC,EAAmBtB,GACzC,OCJa,SAA4BA,GACzC,GAAIuB,MAAMC,QAAQxB,GAAM,OAAO,OAAAyB,EAAA,GAAiBzB,GDGzC,CAAkBA,IELZ,SAA0B0B,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgB1B,IAAQ,OAAA+B,EAAA,GAA2B/B,IGLvE,WACb,MAAM,IAAIgC,UAAU,wIHIwE","file":"static/js/7.e9bebcdd.chunk.js","sourcesContent":["import useMarvelService from '../../services/MarvelService';\nimport {useState, useEffect} from 'react'\nimport { Link } from 'react-router-dom';\n\nimport './comicsList.scss';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nconst setContent = (process, Component, newItemLoading) => {\n    switch (process) {\n        case 'waiting':\n            return <Spinner/>\n        case 'loading':\n            return newItemLoading ? <Component/> : <Spinner/>\n        case 'confirmed':\n            return <Component/>\n        case 'error':\n            return <ErrorMessage/>\n        default:\n            throw new Error('Unexpected process state')\n    }\n}\n\nconst ComicsList = () => {\n\n    const {clearError, getAllComicses, process, setProcess} = useMarvelService()   \n    const [comicsList, setComicsList] = useState([])\n    const [newItemLoading, setNewItemLoading] = useState(false)\n    const [offset, setOffset] = useState(200)\n    const [comicsEnded, setComicsEnded] = useState(false)\n\n\n   useEffect(() => {\n        onRequest(offset, true);\n        // eslint-disable-next-line\n   }, [])\n\n   const onRequest = (offset, initial) => {\n        clearError();\n        initial? setNewItemLoading(false) : setNewItemLoading(true)\n        getAllComicses(offset)\n            .then(onComicsListLoaded)\n            .then(() => setProcess('confirmed'))\n    }\n\n\n    const onComicsListLoaded = (newComicsList) => {\n        let ended = false;\n        if (newComicsList.length < 8) {\n            ended = true;\n        }\n\n        setComicsList((comicsList) => [...comicsList, ...newComicsList]);\n        setNewItemLoading(false);\n        setOffset((offset) => offset + 8);\n        setComicsEnded(ended)\n    }\n\n\n\n    function renderItems  (arr) {\n        const items =  arr.map((item, i) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            \n            return (\n\n                <li className=\"comics__item\"\n                key={i}\n                >\n                <Link to={`/comics/${item.id}`}>\n                    <img style={imgStyle} src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\n                    <div className=\"comics__item-name\">{item.title}</div>\n                    <div className=\"comics__item-price\">{item.price}</div>\n                </Link>\n            </li>\n\n            )\n        });\n        // А эта конструкция вынесена для центровки спиннера/ошибки\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n   \n\n       \n        return (\n            <div className=\"comics__list\">\n                {setContent(process, () => renderItems(comicsList), newItemLoading)}\n                <button \n                    className=\"button button__main button__long\"\n                    disabled={newItemLoading}\n                    style={{'display': comicsEnded ? 'none' : 'block'}}\n                    onClick={() => onRequest(offset)}>\n                    <div className=\"inner\">{!newItemLoading ? 'load more' : 'loading...'}</div>\n                </button>\n            </div>\n        )\n    }\n\n\n\n\n\nexport default ComicsList;","import AppBanner from \"../appBanner/AppBanner\"\r\nimport { Helmet } from \"react-helmet\"\r\n\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\n\r\nconst ComicsPage = () => {\r\n     return (\r\n         <>\r\n         <Helmet>\r\n            <meta\r\n                name=\"description\"\r\n                content=\"Page with list of our comics\"\r\n                />\r\n            <title>Comics page</title>\r\n\r\n         </Helmet>\r\n          <AppBanner/>  \r\n          <ComicsList/>\r\n         </>\r\n     )\r\n}\r\n\r\nexport default ComicsPage\r\n\r\n\r\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}