{"version":3,"sources":["components/pages/SinglePage.js","components/skeleton/Skeleton.js","utils/setContent.js"],"names":["SinglePage","Component","dataType","id","useParams","useState","data","setData","useMarvelService","getCharacter","getComic","clearError","process","setProcess","useEffect","updateData","then","onDataLoaded","className","setContent","Skeleton","Spinner","ErrorMessage","Error"],"mappings":"iKAoEeA,UA1DI,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,SAErBC,EAAMC,cAAND,GACP,EAAwBE,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEA,EAAkEC,cAA3DC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,SAAUC,EAA/B,EAA+BA,WAAYC,EAA3C,EAA2CA,QAASC,EAApD,EAAoDA,WAEpDC,qBAAU,WACNC,MAED,CAACZ,IAGJ,IAAMY,EAAa,WAGf,OAFAJ,IAEQT,GACJ,IAAK,QACDQ,EAASP,GAAIa,KAAKC,GACjBD,MAAK,kBAAMH,EAAW,gBACvB,MACJ,IAAK,YACDJ,EAAaN,GAAIa,KAAKC,GACrBD,MAAK,kBAAMH,EAAW,kBAS7BI,EAAe,SAACX,GAClBC,EAAQD,IAQZ,OACG,qCACC,cAAC,IAAD,IACA,qBAAKY,UAAU,cAAf,SACIC,YAAWP,EAASX,EAAWK,U,2DCnC5Bc,EAlBE,WACb,OACI,qCACI,mBAAGF,UAAU,eAAb,2EAEA,sBAAKA,UAAU,WAAf,UACI,sBAAKA,UAAU,yBAAf,UACI,qBAAKA,UAAU,2BACf,qBAAKA,UAAU,4BAEnB,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,iC,QCYhBC,IApBI,SAACP,EAASX,EAAWK,GAEpC,OAAQM,GACJ,IAAK,UACD,OAAO,cAAC,EAAD,IACX,IAAK,UACD,OAAO,cAACS,EAAA,EAAD,IACX,IAAK,YACD,OAAO,cAACpB,EAAD,CAAWK,KAAMA,IAC5B,IAAK,QACD,OAAO,cAACgB,EAAA,EAAD,IAGX,QACI,MAAM,IAAIC,MAAM,+B","file":"static/js/8.14fdc75d.chunk.js","sourcesContent":["import { useParams } from 'react-router-dom';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport AppBanner from '../appBanner/AppBanner'\r\nimport setContent from '../../utils/setContent';\r\n\r\n\r\n\r\n\r\nconst SinglePage = ({Component, dataType}) => {\r\n\r\n    const {id} = useParams();\r\n    const [data, setData] = useState(null);\r\n\r\n    const {getCharacter, getComic, clearError, process, setProcess} = useMarvelService()\r\n\r\n    useEffect(() => {\r\n        updateData();\r\n        // eslint-disable-next-line\r\n    }, [id])\r\n\r\n\r\n    const updateData = () => {\r\n        clearError();\r\n\r\n        switch (dataType) {\r\n            case 'comic':\r\n                getComic(id).then(onDataLoaded)\r\n                .then(() => setProcess('confirmed'))\r\n                break;\r\n            case 'character':\r\n                getCharacter(id).then(onDataLoaded)\r\n                .then(() => setProcess('confirmed'))\r\n                break;\r\n                default:\r\n                    break;\r\n        }\r\n    }\r\n\r\n\r\n    \r\n    const onDataLoaded = (data) => {\r\n        setData(data);\r\n\r\n    }\r\n\r\n    // const errorMessage = error ? <ErrorMessage/> : null;\r\n    // const spinner = loading ? <Spinner/> : null;\r\n    // const content = !(loading || error || !data) ? <Component data={data}/> : null;\r\n\r\n    return (\r\n       <>\r\n        <AppBanner/>\r\n        <div className='single-page'>\r\n           {setContent(process, Component, data)}\r\n      \r\n        </div>\r\n        </>\r\n    )\r\n\r\n\r\n\r\n    \r\n}\r\n\r\n\r\n\r\nexport default SinglePage;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">\nPlease select a character on the left to see more information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","\r\nimport ErrorMessage from \"../components/errorMessage/ErrorMessage\";\r\nimport Skeleton from \"../components/skeleton/Skeleton\";\r\nimport Spinner from \"../components/spinner/Spinner\";\r\n\r\n\r\nconst setContent = (process, Component, data) => {\r\n\r\n    switch (process) {\r\n        case 'waiting':\r\n            return <Skeleton/>\r\n        case 'loading':\r\n            return <Spinner/>\r\n        case 'confirmed':\r\n            return <Component data={data}/>\r\n        case 'error':\r\n            return <ErrorMessage/>\r\n            \r\n    \r\n        default:\r\n            throw new Error('Unexpected process state')\r\n    }\r\n    \r\n}    \r\n\r\n\r\nexport default setContent;\r\n"],"sourceRoot":""}